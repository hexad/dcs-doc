name: Build STAGE

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    env:
      DEPLOY_USER: gh-dcs-deploy
      DEPLOY_HOST: lordvesel.win
      RELEASE_DIR: /var/www/dcs-docs/stage/releases/${{ github.run_number }}
      RELEASES_DIR: /var/www/dcs-docs/stage/releases/
      CURRENT_DIR: /var/www/dcs-docs/stage/current
      PRURL: "${{ github.server_url }}/${{ github.repository }}/pull/${{ github.event.number }}"
    runs-on:
      - self-hosted
      - dcs
    permissions:
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: CSS
        run: |
          export T=$(date +%s)
          export CSS=css/materal-add-${T}.css
          for L in ru en
          do
            yq -i '.extra_css[0] = strenv(CSS)' $L/mkdocs.yml
            mv $L/docs/css/materal-add.css $L/docs/$CSS
          done

      - name: Build mkdocs
        run: |
          docker run -i --rm -v $PWD:/build -w /build python:3.11-alpine sh -c 'apk add \
          git gcc linux-headers musl-dev && \
          git config --global --add safe.directory /build && \
          cd ru && pip install -r requirements.txt && \
          mkdocs build && \
          cd ../en && mkdocs build && \
          chown -R 1004:1004 ../'

      - name: Deploy
        run: |
          [[ -d ${{env.RELEASE_DIR}}/ru ]] || mkdir -p ${{env.RELEASE_DIR}}/ru
          [[ -d ${{env.RELEASE_DIR}}/en ]] || mkdir -p ${{env.RELEASE_DIR}}/en
          rsync -a ru/site/ ${{env.RELEASE_DIR}}/ru/
          rsync -a en/site/ ${{env.RELEASE_DIR}}/en/

      - name: Switch release
        run: |
          ln -sfn ${{env.RELEASE_DIR}} ${{env.CURRENT_DIR}}
          for R in `ls ${{env.RELEASES_DIR}} | sort -n | head -n -1`
          do rm -rf ${{env.RELEASES_DIR}}$R
          done

      - name: Status Success Notification
        if: ${{ success() }}
        run: |
          ntfy -b telegram send "âš¡ DCS DOCS: Successfuly deployed STAGE ${{env.PRURL}}

          https://dcs-docs-stage.lordvesel.win/ru/
          https://dcs-docs-stage.lordvesel.win/en/"

      - name: Status Fail Notification
        if: ${{ failure() }}
        run: |
          ntfy -b telegram send "ðŸ’© DCS DOCS: Deploy STAGE failed ${{env.PRURL}}."
